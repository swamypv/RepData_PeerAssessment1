row.names(amzn)
class(amzn)
class(amzn)
class(amzn$xts)
amzn1 <- data.frame(amzn)
class(amzn1)
row.names(amzn1)
View(amzn1)
table(grepl("^2012-"), amzn1$row.names)
table(grepl("^2012-", amzn1$row.names))
grepl("^2012", amzn1$row.names)
table(grepl("^2012", amzn1$row.names))
table(grepl("^2012", row.names(amzn1)))
class(row.names(amzn1))
class(amzn)
head(sampleTimes)
class(sampleTimes)
sampleTimes
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
View(outcome)
?stop
tb <- table(grepl("^2012", row.names(amzn1)))
class(tb)
tb
tb$FALSE
data.frame(tb)
View(outcome)
source('C:/Coursera/best.R')
source('C:/Coursera/best.R')
outcome[grep("AL"), outcome$State)]
outcome
outcome[grepl("AL"), outcome$State)]
outcome[grepl("AL", outcome$State),]
source('C:/Coursera/best.R')
source('C:/Coursera/best.R')
source('C:/Coursera/best.R')
source('C:/Coursera/best.R')
submit()
outcome[grepl("SC", outcome$State),]
source('C:/Coursera/best.R')
submit
submit()
source('C:/Coursera/best.R')
submit()
2
submit()
submit()
best("NN", "pneumonia")
source('C:/Coursera/best.R')
submit()
outcomeData <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
subsetByState <- subset(outcomeData, subset=outcomeData$State == state, select = c(2, 7,11))
subsetByState <- subset(outcomeData, subset=outcomeData$State == state, select = c(2, 7,17))
subsetByState <- subset(outcomeData, subset=outcomeData$State == "TX", select = c(2, 7,17))
subsetByState[,3] = suppressWarnings(as.numeric(subsetByState[,3]))
subsetByState <- subsetByState[complete.cases(subsetByState),]
subsetByState[,3] = suppressWarnings(as.numeric(subsetByState[,3]))
subsetByState
head(subsetByState)
subsetByState <- subset(outcomeData, subset=outcomeData$State == "TX", select = c(2, 7,17))
head(subsetByState)
names(subsetByState)
View(subsetByState)
library(plyr)
subsetByState <- subsetByState[complete.cases(subsetByState),]
View(subsetByState)
arrange(subsetByState, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
subsetByState <- arrange(subsetByState, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
View(subsetByState)
subsetByState <- arrange(subsetByState, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure,Hospital.Name)
View(subsetByState)
subsetByState <- arrange(subsetByState, desc(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure))
View(subsetByState)
subsetByState <- arrange(subsetByState, desc(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, Hospital.Name))
subsetByState <- arrange(subsetByState, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure,Hospital.Name)
source("rankhospital.R")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
submit()
submit()
submit()
submit()
unique(c("A", "A"))
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
source("rankall.R")
source("rankall.R")
source("rankall.R")
source("rankall.R")
data.frame(name, age)
data.frame()
source("rankall.R")
source("rankall.R")
compData <- data.frame(A= numeric(0), B= numeric(0))
compData <- rbind(compData,c(5,443))
compData
compData <- data.frame(A= numeric(0), B= numeric(0))
compData
rbind(compData,c(5,443))
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
xx <- rankall("heart attack", 20)
View(xx)
source("rankall.R")
source("rankall.R")
xx <- rankall("heart attack", 20)
View(xx)
View(xx)
source("rankall.R")
xx <- rankall("heart attack", 20)
source("rankall.R")
xx <- rankall("heart attack", 20)
source("rankall.R")
xx <- rankall("heart attack", 20)
source("rankhospital.R")
xx <- rankall("heart attack", 20)
source("rankhospital.R")
xx <- rankall("heart attack", 20)
View(xx)
View(xx)
source("rankall.R")
xx <- rankall("heart attack", 20)
View(xx)
View(xx)
source("rankall.R")
xx <- rankall("heart attack", 20)
View(xx)
source("rankall.R")
xx <- rankall("heart attack", 20)
source("rankall.R")
xx <- rankall("heart attack", 20)
View(xx)
xx <- rankall("heart failure", 10)
View(xx)
submit()
submit()
xx <- rankall("pneumonia", "worst")
View(xx)
source("rankall.R")
xx <- rankall("pneumonia", "worst")
View(xx)
submit()
submit()
?Devices
?lines
window()
?plot
source('C:/Coursera/ExData_Plotting1/plot1.R')
View(energy.data)
head(energy.data)
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T)
head(energy.data)
class(energy.data$Date)
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, subset=(as.Date(Date)='16/12/2006'))
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, subset=(Date='16/12/2006'))
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, subset=("Date"='16/12/2006'))
View(energy.data)
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, subset=(Sub_metering_3==17))
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, subset=(Voltage==234.840))
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, subset=('Voltage'==234.840))
lines <- grep('^[1-2]/2/2007', readline("./household_power_consumption.txt")
)
readlines?
:q
?readlines
?readline
lines <- grep('^[1-2]/2/2007', readLines('household_power_consumption.txt'))
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, skip=66637)
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, skip=66637, nrows=2880)
View(energy.data)
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, skip=66636, nrows=2880)
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, skip=66636, nrows=2881)
View(energy.data)
head(energy.data)
tail(energy.data)
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, skip=66635, nrows=2883)
head(energy.data)
tail(energy.data)
lines
lines[1]
length(lines)
?dbeta
lines <- grep('^[1-2]/2/2007', readline("./household_power_consumption.txt")
)
lines <- grep('^[1-2]/2/2007', readline("./household_power_consumption.txt"))
lines <- grep('^[1-2]/2/2007', readline("household_power_consumption.txt"))
getwd()
lines <- grep('^[1-2]/2/2007', readline("household_power_consumption.txt"))
View(energy.data)
lines <- grep('^[1-2]/2/2007', readlines("household_power_consumption.txt"))
lines <- grep('^[1-2]/2/2007', readline('household_power_consumption.txt'))
lines <- grep('^[1-2]/2/2007', readlines('household_power_consumption.txt'))
lines <- grep('^[1-2]/2/2007', readlines("household_power_consumption.txt"))
lines <- grep('^[1-2]/2/2007', readline("household_power_consumption.txt"))
View(energy.data)
lines <- grep('^[1-2]/2/2007', readline("household_power_consumption.txt"))
lines <- grep('^[1-2]/2/2007', readline("./getdata_data_ss06hid.csv"))
readline("household_power_consumption.txt")
lines <- grep('^[1-2]/2/2007', read.table("./getdata_data_ss06hid.csv"))
lines <- grep('^[1-2]/2/2007', read.table("getdata_data_ss06hid.csv"))
lines <- grep('^[1-2]/2/2007', readLines('household_power_consumption.txt'))
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=T, skip=lines[1]-1, nrows=length(lines))
View(energy.data)
head(energy.data)
energy.data <- read.table(file="./household_power_consumption.txt", sep=';', stringsAsFactors=F, header=TRUE, skip=lines[1]-1, nrows=length(lines))
head(energy.data)
View(energy.data)
lines <- grep('^[1-2]/2/2007', readLines("household_power_consumption.txt")
)
energy.data <- read.table(file="./household_power_consumption.txt", sep=";", stringsAsFactors=FALSE, header=TRUE, skip=66637, nrows=2880)
View(energy.data)
energy.data <- read.table(file="./household_power_consumption.txt", sep=";", stringsAsFactors=FALSE, skip=66637, nrows=2880, header=TRUE)
View(energy.data)
energy.data <- read.table(file="./household_power_consumption.txt",header=TRUE, sep=";", stringsAsFactors=FALSE, skip=66637, nrows =2880)
View(energy.data)
energy.data <- read.table(file="./household_power_consumption.txt",header=FALSE, sep=";", stringsAsFactors=FALSE, skip=66637, nrows =2880)
View(energy.data)
energy.data <- read.table(file="./household_power_consumption.txt",header=T, sep=";", stringsAsFactors=FALSE, skip=66637, nrows =2880)
source("./ExData_Plotting1/plot1.R")
plot1()
source("./ExData_Plotting1/plot1.R")
plot1()
source("./ExData_Plotting1/plot1.R")
plot1()
View(energy.data)
View(energy.data)
View(energy.data)
lines <- grep('^[1-2]/2/2007', readLines("household_power_consumption.txt"))
source('C:/Coursera/ExData_Plotting1/plot1.R')
plot1()
source('C:/Coursera/ExData_Plotting1/plot1.R')
plot1()
source('C:/Coursera/ExData_Plotting1/plot1.R')
plot1()
source('C:/Coursera/ExData_Plotting1/plot1.R')
energy.data$Date
View(energy.data)
lines <- grep('^[1-2]/2/2007', readLines("household_power_consumption.txt"))
energy.data <- read.table(file="./household_power_consumption.txt", sep=";", stringsAsFactors=F, header=TRUE, skip=lines[1]-1, nrows=length(lines))
View(energy.data)
View(energy.data)
head(energy.data)
energy.data[1]
energy.data <- read.table(file="./household_power_consumption.txt", sep=";", stringsAsFactors=F, header=TRUE, skip=lines[1]-1, nrows=length(lines)-1)
energy.data[1]
source('C:/Coursera/ExData_Plotting1/plot1.R')
head(energy.data[1])
View(energy.data)
View(energy.data)
source('C:/Coursera/ExData_Plotting1/plot1.R')
plot1()
source('C:/Coursera/ExData_Plotting1/plot2.R')
plot2()
source('C:/Coursera/ExData_Plotting1/plot2.R')
plot2()
set.seed(1)
dat <- data.frame(x = sample(0:2, 5, TRUE), y = sample(0:2, 5, TRUE))
dat
dat[dat==0] <- "?"
dat
dat[dat==0] <- NA
dat
dat[dat=="?"] <- NA
dat
dat <- dat[complete.cases(dat),]
dat
View(energy.data)
lines <- grep('^[1-2]/2/2007', readLines("household_power_consumption.txt"))
energy.data <- read.table(file="./household_power_consumption.txt", sep=";", stringsAsFactors=F, header=TRUE, skip=lines[1]-1, nrows=length(lines)-1)
header_data <- read.table(file="./household_power_consumption.txt", sep=";", stringsAsFactors=F, header=FALSE,  nrows=1)
names(energy.data) <- header_data
View(energy.data)
source('C:/Coursera/ExData_Plotting1/plot2.R')
plot2()
source('C:/Coursera/ExData_Plotting1/plot2.R')
plot2()
strptime(paste(energy.data$Date, energy.data$Time, sep=" "), format="%d/%m/%Y %H:%M:%S")
source('C:/Coursera/ExData_Plotting1/plot2.R')
source('C:/Coursera/ExData_Plotting1/plot2.R')
plot2()
source('C:/Coursera/ExData_Plotting1/plot2.R')
source('C:/Coursera/ExData_Plotting1/plot1.R')
plot1()
source('C:/Coursera/ExData_Plotting1/plot1.R')
source('C:/Coursera/ExData_Plotting1/plot2.R')
source('C:/Coursera/ExData_Plotting1/plot2.R')
source('C:/Coursera/ExData_Plotting1/plot2.R')
source('C:/Coursera/ExData_Plotting1/plot2.R')
plot2()
source('C:/Coursera/ExData_Plotting1/plot2.R')
plot2()
source('C:/Coursera/ExData_Plotting1/plot2.R')
plot2()
plot1()
source('C:/Coursera/ExData_Plotting1/plot2.R')
source('C:/Coursera/ExData_Plotting1/plot3.R')
source('C:/Coursera/ExData_Plotting1/plot3.R')
source('C:/Coursera/ExData_Plotting1/plot3.R')
source('C:/Coursera/ExData_Plotting1/plot3.R')
source('C:/Coursera/ExData_Plotting1/plot3.R')
plot3()
?legend
source('C:/Coursera/ExData_Plotting1/plot3.R')
source('C:/Coursera/ExData_Plotting1/plot3.R')
plot3()
source('C:/Coursera/ExData_Plotting1/plot3.R')
plot3()
?legend
source('C:/Coursera/ExData_Plotting1/plot4.R')
plot4()
source('C:/Coursera/ExData_Plotting1/plot4.R')
source('C:/Coursera/ExData_Plotting1/plot4.R')
source('C:/Coursera/ExData_Plotting1/plot4.R')
source('C:/Coursera/ExData_Plotting1/plot4.R')
source('C:/Coursera/ExData_Plotting1/plot4.R')
source('C:/Coursera/ExData_Plotting1/plot4.R')
plot4()
source('C:/Coursera/ExData_Plotting1/plot4.R')
source('C:/Coursera/ExData_Plotting1/plot4.R')
source('C:/Coursera/ExData_Plotting1/plot4.R')
plot4()
source('C:/Coursera/ExData_Plotting1/plot4.R')
plot4()
source('C:/Coursera/ExData_Plotting1/plot4.R')
plot4()
?legend
source('C:/Coursera/ExData_Plotting1/plot4.R')
plot4()
source('C:/Coursera/ExData_Plotting1/plot4.R')
plot4()
source('C:/Coursera/ExData_Plotting1/plot4.R')
plot4()
f1 <- rep(0:1, each=50)
f1
rep(0:5, each2)
rep(0:5, each=2)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
BodyWeight
?panel.text
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom
?par
?splom
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
?splom
?print.trellis
?trellis.par.set
?print.trellis
install.packages("knitr")
library(knitr)
avg_by_interval <- ddply(data, .(interval), summarise, steps=mean(steps))
library(plyr)
avg_by_interval <- ddply(data, .(interval), summarise, steps=mean(steps))
data <- read.csv("activity.csv", header=TRUE)
setwd("c:/Coursera/RepData_PeerAssessment1/")
data <- read.csv("activity.csv", header=TRUE)
avg_by_interval <- ddply(data, .(interval), summarise, steps=mean(steps))
plot(avg_by_interval$interval, avg_by_interval$steps, type="l",
col="blue",
xlab="5-minute interval",
ylab="Average number of steps taken",
main="Average daily activity pattern")
plot(avg_by_interval$interval, avg_by_interval$steps, type="l", col="blue", xlab="5-minute interval", ylab="Average number of steps taken", main="Average daily activity pattern")
plot(avg_by_interval$interval, avg_by_interval$steps, type="1")
data <- data[which(data$steps != "NA"), ]
avg_by_interval <- ddply(data, .(interval), summarise, steps=mean(steps))
plot(avg_by_interval$interval, avg_by_interval$steps, type="l", col="blue", xlab="5-minute interval", ylab="Average number of steps taken", main="Average daily activity pattern")
View(avg_by_interval)
which.max(avg_by_interval)
View(avg_by_interval)
which.max(avg_by_interval$interval)
which.max(as.array(avg_by_interval))
which.max(avg_by_interval)
which.max(avg_by_interval$steps)
avg_by_interval[which.max(avg_by_interval$steps),]
avg_by_interval[which.max(avg_by_interval$steps),2]
avg_by_interval[which.max(avg_by_interval$steps),1]
head(data)
head(avg_by_interval)
join(data, avg)
xyz <- join(data, avg_by_interval)
View(xyz)
?join
xyz <- arrange(join(data, avg_by_interval), interval)
View(xyz)
data <- read.csv("activity.csv", header=TRUE)
cdata <-data[which(data$steps != "NA"), ]
avg_by_interval <- ddply(data, .(interval), summarise, steps=mean(steps))
View(data)
xyz <- join(data, avg_by_interval)
View(xyz)
View(xyz)
xyz <- arrange(join(data, avg_by_interval), interval)
View(xyz)
xyz <- join(data, avg_by_interval)
View(xyz)
?arrage
?arrange
arrange(xyz, interval)
xyz <- arrange(xyz, interval)
View(xyz)
sum(is.na(data$steps))
sum(is.na(xyz$steps))
count(is.na(xyz$steps))
xyz <- arrange(join(data, avg_by_interval), interval)
sum(is.na(xyz$steps))
merged <- arrange(join(data, avg_by_interval), interval)
xyz <- merge(data, avg_by_interval, all=TRUE)
View(xyz)
xyz <- merge(data, avg_by_interval, by.x=interval, by.y=interval, all=TRUE)
head(data)
head(avg_by_interval)
xyz <- merge(data, avg_by_interval, by.x="interval", by.y="interval", all=TRUE)
View(xyz)
View(avg_by_interval)
View(avg_by_interval)
head(avg_by_interval)
cdata <- data[which(data$steps != "NA"), ]
avg_by_interval <- ddply(cdata, .(interval), summarise, steps=mean(steps))
View(avg_by_interval)
xyz <- merge(data, avg_by_interval, by.x="interval", by.y="interval", all=TRUE)
View(xyz)
View(avg_by_interval)
View(xyz)
sort(xyz$date)
xyz1 <- arrange(xyz, date)
View(xyz1)
xyz2 <- replace(xyz1, is.na(xyz1$steps.x), xyz1$steps.y)
xyz2 <- replace(xyz1, is.na(xyz1$steps.x), 9999)
?replace
xyz2 <- replace(xyz1$steps.x, is.na(xyz1$steps.x), 9999)
df <- data.frame(group=rep(c("A", "B", "C"), each=4), height=sample(100:150, 12))
View(df)
is.na(xyz1$steps.x)
is.na(xyz1$steps.x)
xyz1[is.na(xyz1$steps.x)]
xyz1[is.na(xyz1$steps.x),]
xyz1[is.na(xyz1$steps.x)]
is.na(xyz1$steps.x)
na_idx <- is.na(xyz1$steps.x)
na_idx[1]
average_by_interval <- ddply(cdata, .(interval), summarise, steps=mean(steps))
average_by_interval[average_by_interval$steps==max(average_by_interval$steps),]
colnames(average_by_interval)[2] <- "intervalAvg"
View(average_by_interval)
merged <- arrange(join(data, average_by_interval), interval)
View(merged)
merged$steps[is.na(merged$steps)] <- merged$intervalAvg[is.na(merged$steps)]
View(merged)
merged <- xyz1
xyz1$steps.x[is.na(xyz1$steps.x)] <- xyz1$steps.y[is.na(xyz1$steps.y)]
xyz1$steps.x[is.na(xyz1$steps.x)] <- xyz1$steps.y[is.na(xyz1$steps.y)]
merged_data <- arrange(join(data, average_by_interval), interval)
merged_data <- arrange(join(cdata, average_by_interval), interval)
View(merged_data)
merged_data$steps[is.na(merged_data$steps)] <- merged_data$intervalAvg[is.na(merged_data$steps)]
View(merged_data)
xyz1
View(xyz1)
xyz1$steps.x[is.na(xyz1$steps.x)] <- xyz1$steps.y[is.na(xyz1$steps.y)]
xyz1$step.x
xyz1$steps.X[is.na(xyz1$steps.X)] <- xyz1$steps.Y[is.na(xyz1$steps.Y)]
xyz1
class(xyz1)
xyz1$steps.x
xyz1$steps.x[is.na(xyz1$steps.x)] <- xyz1$steps.y[is.na(xyz1$steps.x)]
View(xyz1)
merged <- merge(cdata, avg_by_interval, by.x="interval", by.y="interval", all=TRUE)
merged$steps.x[is.na(merged$steps.x)] <- merged$steps.y[is.na(merged$steps.x)]
colnames(merged)[2] <- "steps"
View(merged)
View(cdata)
data <- read.csv("activity.csv", header=TRUE)
cdata <- data[which(data$steps != "NA"), ]
avg_by_interval <- ddply(data, .(interval), summarise, steps=mean(steps))
avg_by_interval <- ddply(cdata, .(interval), summarise, steps=mean(steps))
merged <- merge(cdata, avg_by_interval, by.x="interval", by.y="interval", all=TRUE)
View(cdata)
View(merged)
